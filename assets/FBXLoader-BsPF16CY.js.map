{"version":3,"file":"FBXLoader-BsPF16CY.js","sources":["../../node_modules/three/examples/jsm/libs/fflate.module.js","../../node_modules/three/examples/jsm/curves/NURBSUtils.js","../../node_modules/three/examples/jsm/curves/NURBSCurve.js","../../node_modules/three/examples/jsm/loaders/FBXLoader.js"],"sourcesContent":["/*!\nfflate - fast JavaScript compression/decompression\n<https://101arrowz.github.io/fflate>\nLicensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE\nversion 0.8.2\n*/\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","import {\n\tVector3,\n\tVector4\n} from 'three';\n\n/**\n * @module NURBSUtils\n * @three_import import * as NURBSUtils from 'three/addons/curves/NURBSUtils.js';\n */\n\n/**\n * Finds knot vector span.\n *\n * @param {number} p - The degree.\n * @param {number} u - The parametric value.\n * @param {Array<number>} U - The knot vector.\n * @return {number} The span.\n */\nfunction findSpan( p, u, U ) {\n\n\tconst n = U.length - p - 1;\n\n\tif ( u >= U[ n ] ) {\n\n\t\treturn n - 1;\n\n\t}\n\n\tif ( u <= U[ p ] ) {\n\n\t\treturn p;\n\n\t}\n\n\tlet low = p;\n\tlet high = n;\n\tlet mid = Math.floor( ( low + high ) / 2 );\n\n\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\tif ( u < U[ mid ] ) {\n\n\t\t\thigh = mid;\n\n\t\t} else {\n\n\t\t\tlow = mid;\n\n\t\t}\n\n\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t}\n\n\treturn mid;\n\n}\n\n/**\n * Calculates basis functions. See The NURBS Book, page 70, algorithm A2.2.\n *\n * @param {number} span - The span in which `u` lies.\n * @param {number} u - The parametric value.\n * @param {number} p - The degree.\n * @param {Array<number>} U - The knot vector.\n * @return {Array<number>} Array[p+1] with basis functions values.\n */\nfunction calcBasisFunctions( span, u, p, U ) {\n\n\tconst N = [];\n\tconst left = [];\n\tconst right = [];\n\tN[ 0 ] = 1.0;\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tconst temp = N[ r ] / ( rv + lv );\n\t\t\tN[ r ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tN[ j ] = saved;\n\n\t}\n\n\treturn N;\n\n}\n\n/**\n * Calculates B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n *\n * @param {number} p - The degree of the B-Spline.\n * @param {Array<number>} U - The knot vector.\n * @param {Array<Vector4>} P - The control points\n * @param {number} u - The parametric point.\n * @return {Vector4} The point for given `u`.\n */\nfunction calcBSplinePoint( p, U, P, u ) {\n\n\tconst span = findSpan( p, u, U );\n\tconst N = calcBasisFunctions( span, u, p, U );\n\tconst C = new Vector4( 0, 0, 0, 0 );\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tconst point = P[ span - p + j ];\n\t\tconst Nj = N[ j ];\n\t\tconst wNj = point.w * Nj;\n\t\tC.x += point.x * wNj;\n\t\tC.y += point.y * wNj;\n\t\tC.z += point.z * wNj;\n\t\tC.w += point.w * Nj;\n\n\t}\n\n\treturn C;\n\n}\n\n/**\n * Calculates basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n *\n * @param {number} span - The span in which `u` lies.\n * @param {number} u - The parametric point.\n * @param {number} p - The degree.\n * @param {number} n - number of derivatives to calculate\n * @param {Array<number>} U - The knot vector.\n * @return {Array<Array<number>>} An array[n+1][p+1] with basis functions derivatives.\n */\nfunction calcBasisFunctionDerivatives( span, u, p, n, U ) {\n\n\tconst zeroArr = [];\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tzeroArr[ i ] = 0.0;\n\n\tconst ders = [];\n\n\tfor ( let i = 0; i <= n; ++ i )\n\t\tders[ i ] = zeroArr.slice( 0 );\n\n\tconst ndu = [];\n\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\tndu[ 0 ][ 0 ] = 1.0;\n\n\tconst left = zeroArr.slice( 0 );\n\tconst right = zeroArr.slice( 0 );\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\tconst temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tndu[ j ][ j ] = saved;\n\n\t}\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t}\n\n\tfor ( let r = 0; r <= p; ++ r ) {\n\n\t\tlet s1 = 0;\n\t\tlet s2 = 1;\n\n\t\tconst a = [];\n\t\tfor ( let i = 0; i <= p; ++ i ) {\n\n\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t}\n\n\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\t\tlet d = 0.0;\n\t\t\tconst rk = r - k;\n\t\t\tconst pk = p - k;\n\n\t\t\tif ( r >= k ) {\n\n\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t}\n\n\t\t\tconst j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\tconst j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\tfor ( let j = j1; j <= j2; ++ j ) {\n\n\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t}\n\n\t\t\tif ( r <= pk ) {\n\n\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t}\n\n\t\t\tders[ k ][ r ] = d;\n\n\t\t\tconst j = s1;\n\t\t\ts1 = s2;\n\t\t\ts2 = j;\n\n\t\t}\n\n\t}\n\n\tlet r = p;\n\n\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ k ][ j ] *= r;\n\n\t\t}\n\n\t\tr *= p - k;\n\n\t}\n\n\treturn ders;\n\n}\n\n/**\n * Calculates derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n *\n * @param {number} p - The degree.\n * @param {Array<number>} U - The knot vector.\n * @param {Array<Vector4>} P - The control points\n * @param {number} u - The parametric point.\n * @param {number} nd - The number of derivatives.\n * @return {Array<Vector4>} An array[d+1] with derivatives.\n */\nfunction calcBSplineDerivatives( p, U, P, u, nd ) {\n\n\tconst du = nd < p ? nd : p;\n\tconst CK = [];\n\tconst span = findSpan( p, u, U );\n\tconst nders = calcBasisFunctionDerivatives( span, u, p, du, U );\n\tconst Pw = [];\n\n\tfor ( let i = 0; i < P.length; ++ i ) {\n\n\t\tconst point = P[ i ].clone();\n\t\tconst w = point.w;\n\n\t\tpoint.x *= w;\n\t\tpoint.y *= w;\n\t\tpoint.z *= w;\n\n\t\tPw[ i ] = point;\n\n\t}\n\n\tfor ( let k = 0; k <= du; ++ k ) {\n\n\t\tconst point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = point;\n\n\t}\n\n\tfor ( let k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t}\n\n\treturn CK;\n\n}\n\n/**\n * Calculates \"K over I\".\n *\n * @param {number} k - The K value.\n * @param {number} i - The I value.\n * @return {number} k!/(i!(k-i)!)\n */\nfunction calcKoverI( k, i ) {\n\n\tlet nom = 1;\n\n\tfor ( let j = 2; j <= k; ++ j ) {\n\n\t\tnom *= j;\n\n\t}\n\n\tlet denom = 1;\n\n\tfor ( let j = 2; j <= i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\tfor ( let j = 2; j <= k - i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\treturn nom / denom;\n\n}\n\n/**\n * Calculates derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n *\n * @param {Array<Vector4>} Pders - Array with derivatives.\n * @return {Array<Vector3>} An array with derivatives for rational curve.\n */\nfunction calcRationalCurveDerivatives( Pders ) {\n\n\tconst nd = Pders.length;\n\tconst Aders = [];\n\tconst wders = [];\n\n\tfor ( let i = 0; i < nd; ++ i ) {\n\n\t\tconst point = Pders[ i ];\n\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\twders[ i ] = point.w;\n\n\t}\n\n\tconst CK = [];\n\n\tfor ( let k = 0; k < nd; ++ k ) {\n\n\t\tconst v = Aders[ k ].clone();\n\n\t\tfor ( let i = 1; i <= k; ++ i ) {\n\n\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t}\n\n\treturn CK;\n\n}\n\n/**\n * Calculates NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n *\n * @param {number} p - The degree.\n * @param {Array<number>} U - The knot vector.\n * @param {Array<Vector4>} P - The control points in homogeneous space.\n * @param {number} u - The parametric point.\n * @param {number} nd - The number of derivatives.\n * @return {Array<Vector3>} array with derivatives for rational curve.\n */\nfunction calcNURBSDerivatives( p, U, P, u, nd ) {\n\n\tconst Pders = calcBSplineDerivatives( p, U, P, u, nd );\n\treturn calcRationalCurveDerivatives( Pders );\n\n}\n\n/**\n * Calculates a rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n *\n * @param {number} p - The first degree of B-Spline surface.\n * @param {number} q - The second degree of B-Spline surface.\n * @param {Array<number>} U - The first knot vector.\n * @param {Array<number>} V - The second knot vector.\n * @param {Array<Array<Vector4>>} P - The control points in homogeneous space.\n * @param {number} u - The first parametric point.\n * @param {number} v - The second parametric point.\n * @param {Vector3} target - The target vector.\n */\nfunction calcSurfacePoint( p, q, U, V, P, u, v, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst temp = [];\n\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\tconst w = point.w;\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t}\n\n\t}\n\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n/**\n * Calculates a rational B-Spline volume point. See The NURBS Book, page 134, algorithm A4.3.\n *\n * @param {number} p - The first degree of B-Spline surface.\n * @param {number} q - The second degree of B-Spline surface.\n * @param {number} r - The third degree of B-Spline surface.\n * @param {Array<number>} U - The first knot vector.\n * @param {Array<number>} V - The second knot vector.\n * @param {Array<number>} W - The third knot vector.\n * @param {Array<Array<Array<Vector4>>>} P - The control points in homogeneous space.\n * @param {number} u - The first parametric point.\n * @param {number} v - The second parametric point.\n * @param {number} w - The third parametric point.\n * @param {Vector3} target - The target vector.\n */\nfunction calcVolumePoint( p, q, r, U, V, W, P, u, v, w, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst wspan = findSpan( r, w, W );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst Nw = calcBasisFunctions( wspan, w, r, W );\n\tconst temp = [];\n\n\tfor ( let m = 0; m <= r; ++ m ) {\n\n\t\ttemp[ m ] = [];\n\n\t\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ m ][ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ][ wspan - r + m ].clone();\n\t\t\t\tconst w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ m ][ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let m = 0; m <= r; ++ m ) {\n\n\t\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ m ][ l ].multiplyScalar( Nw[ m ] ).multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\nexport {\n\tfindSpan,\n\tcalcBasisFunctions,\n\tcalcBSplinePoint,\n\tcalcBasisFunctionDerivatives,\n\tcalcBSplineDerivatives,\n\tcalcKoverI,\n\tcalcRationalCurveDerivatives,\n\tcalcNURBSDerivatives,\n\tcalcSurfacePoint,\n\tcalcVolumePoint,\n};\n","import {\n\tCurve,\n\tVector3,\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * This class represents a NURBS curve.\n *\n * Implementation is based on `(x, y [, z=0 [, w=1]])` control points with `w=weight`.\n *\n * @augments Curve\n * @three_import import { NURBSCurve } from 'three/addons/curves/NURBSCurve.js';\n */\nclass NURBSCurve extends Curve {\n\n\t/**\n\t * Constructs a new NURBS curve.\n\t *\n\t * @param {number} degree - The NURBS degree.\n\t * @param {Array<number>} knots - The knots as a flat array of numbers.\n\t * @param {Array<Vector2|Vector3|Vector4>} controlPoints - An array holding control points.\n\t * @param {number} [startKnot] - Index of the start knot into the `knots` array.\n\t * @param {number} [endKnot] - Index of the end knot into the `knots` array.\n\t */\n\tconstructor( degree, knots, controlPoints, startKnot, endKnot ) {\n\n\t\tsuper();\n\n\t\tconst knotsLength = knots ? knots.length - 1 : 0;\n\t\tconst pointsLength = controlPoints ? controlPoints.length : 0;\n\n\t\t/**\n\t\t * The NURBS degree.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.degree = degree;\n\n\t\t/**\n\t\t * The knots as a flat array of numbers.\n\t\t *\n\t\t * @type {Array<number>}\n\t\t */\n\t\tthis.knots = knots;\n\n\t\t/**\n\t\t * An array of control points.\n\t\t *\n\t\t * @type {Array<Vector4>}\n\t\t */\n\t\tthis.controlPoints = [];\n\n\t\t/**\n\t\t * Index of the start knot into the `knots` array.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.startKnot = startKnot || 0;\n\n\t\t/**\n\t\t * Index of the end knot into the `knots` array.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.endKnot = endKnot || knotsLength;\n\n\t\tfor ( let i = 0; i < pointsLength; ++ i ) {\n\n\t\t\t// ensure Vector4 for control points\n\t\t\tconst point = controlPoints[ i ];\n\t\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * This method returns a vector in 3D space for the given interpolation factor.\n\t *\n\t * @param {number} t - A interpolation factor representing a position on the curve. Must be in the range `[0,1]`.\n\t * @param {Vector3} [optionalTarget] - The optional target vector the result is written to.\n\t * @return {Vector3} The position on the curve.\n\t */\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t\t// following results in (wx, wy, wz, w) homogeneous point\n\t\tconst hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\t\tif ( hpoint.w !== 1.0 ) {\n\n\t\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\t\thpoint.divideScalar( hpoint.w );\n\n\t\t}\n\n\t\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n\t}\n\n\t/**\n\t * Returns a unit vector tangent for the given interpolation factor.\n\t *\n\t * @param {number} t - The interpolation factor.\n\t * @param {Vector3} [optionalTarget] - The optional target vector the result is written to.\n\t * @return {Vector3} The tangent vector.\n\t */\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\tconst tangent = optionalTarget;\n\n\t\tconst u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\t\tconst ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\t\ttangent.copy( ders[ 1 ] ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.degree = this.degree;\n\t\tdata.knots = [ ...this.knots ];\n\t\tdata.controlPoints = this.controlPoints.map( p => p.toArray() );\n\t\tdata.startKnot = this.startKnot;\n\t\tdata.endKnot = this.endKnot;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.degree = json.degree;\n\t\tthis.knots = [ ...json.knots ];\n\t\tthis.controlPoints = json.controlPoints.map( p => new Vector4( p[ 0 ], p[ 1 ], p[ 2 ], p[ 3 ] ) );\n\t\tthis.startKnot = json.startKnot;\n\t\tthis.endKnot = json.endKnot;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { NURBSCurve };\n","import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tColorManagement,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSRGBColorSpace,\n\tShapeUtils,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector2,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack\n} from 'three';\n\nimport * as fflate from '../libs/fflate.module.js';\nimport { NURBSCurve } from '../curves/NURBSCurve.js';\n\nlet fbxTree;\nlet connections;\nlet sceneGraph;\n\n/**\n * A loader for the FBX format.\n *\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format.\n * Versions lower than this may load but will probably have errors.\n *\n * Needs Support:\n * - Morph normals / blend shape normals\n *\n * FBX format references:\n * - [C++ SDK reference]{@link https://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html}\n *\n * Binary format specification:\n * - [FBX binary file format specification]{@link https://code.blender.org/2013/08/fbx-binary-file-format-specification/}\n *\n * ```js\n * const loader = new FBXLoader();\n * const object = await loader.loadAsync( 'models/fbx/stanford-bunny.fbx' );\n * scene.add( object );\n * ```\n *\n * @augments Loader\n * @three_import import { FBXLoader } from 'three/addons/loaders/FBXLoader.js';\n */\nclass FBXLoader extends Loader {\n\n\t/**\n\t * Constructs a new FBX loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded FBX asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(Group)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Parses the given FBX data and returns the resulting group.\n\t *\n\t * @param {ArrayBuffer} FBXBuffer - The raw FBX data as an array buffer.\n\t * @param {string} path - The URL base path.\n\t * @return {Group} An object representing the parsed asset.\n\t */\n\tparse( FBXBuffer, path ) {\n\n\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t} else {\n\n\t\t\tconst FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t}\n\n\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t}\n\n\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t}\n\n\t\t// console.log( fbxTree );\n\n\t\tconst textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t}\n\n}\n\n// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\nclass FBXTreeParser {\n\n\tconstructor( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tparse() {\n\n\t\tconnections = this.parseConnections();\n\n\t\tconst images = this.parseImages();\n\t\tconst textures = this.parseTextures( images );\n\t\tconst materials = this.parseMaterials( textures );\n\t\tconst deformers = this.parseDeformers();\n\t\tconst geometryMap = new GeometryParser().parse( deformers );\n\n\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\treturn sceneGraph;\n\n\t}\n\n\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t// and details the connection type\n\tparseConnections() {\n\n\t\tconst connectionMap = new Map();\n\n\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\tconst rawConnections = fbxTree.Connections.connections;\n\n\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\tconst fromID = rawConnection[ 0 ];\n\t\t\t\tconst toID = rawConnection[ 1 ];\n\t\t\t\tconst relationship = rawConnection[ 2 ];\n\n\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn connectionMap;\n\n\t}\n\n\t// Parse FBXTree.Objects.Video for embedded image data\n\t// These images are connected to textures in FBXTree.Objects.Textures\n\t// via FBXTree.Connections.\n\tparseImages() {\n\n\t\tconst images = {};\n\t\tconst blobs = {};\n\n\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\tconst videoNodes = fbxTree.Objects.Video;\n\n\t\t\tfor ( const nodeID in videoNodes ) {\n\n\t\t\t\tconst videoNode = videoNodes[ nodeID ];\n\n\t\t\t\tconst id = parseInt( nodeID );\n\n\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\tconst arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\tconst base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\tconst image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( const id in images ) {\n\n\t\t\tconst filename = images[ id ];\n\n\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\t// Parse embedded image data in FBXTree.Video.Content\n\tparseImage( videoNode ) {\n\n\t\tconst content = videoNode.Content;\n\t\tconst fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\tconst extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\tlet type;\n\n\t\tswitch ( extension ) {\n\n\t\t\tcase 'bmp':\n\n\t\t\t\ttype = 'image/bmp';\n\t\t\t\tbreak;\n\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\n\t\t\t\ttype = 'image/jpeg';\n\t\t\t\tbreak;\n\n\t\t\tcase 'png':\n\n\t\t\t\ttype = 'image/png';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tif':\n\n\t\t\t\ttype = 'image/tiff';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tga':\n\n\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t}\n\n\t\t\t\ttype = 'image/tga';\n\t\t\t\tbreak;\n\n\t\t\tcase 'webp':\n\n\t\t\t\ttype = 'image/webp';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\treturn;\n\n\t\t}\n\n\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t} else { // Binary Format\n\n\t\t\tconst array = new Uint8Array( content );\n\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t}\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Texture\n\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t// to images in FBXTree.Objects.Video\n\tparseTextures( images ) {\n\n\t\tconst textureMap = new Map();\n\n\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\tconst textureNodes = fbxTree.Objects.Texture;\n\t\t\tfor ( const nodeID in textureNodes ) {\n\n\t\t\t\tconst texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textureMap;\n\n\t}\n\n\t// Parse individual node in FBXTree.Objects.Texture\n\tparseTexture( textureNode, images ) {\n\n\t\tconst texture = this.loadTexture( textureNode, images );\n\n\t\ttexture.ID = textureNode.id;\n\n\t\ttexture.name = textureNode.attrName;\n\n\t\tconst wrapModeU = textureNode.WrapModeU;\n\t\tconst wrapModeV = textureNode.WrapModeV;\n\n\t\tconst valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\tconst valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t// 0: repeat(default), 1: clamp\n\n\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\tconst values = textureNode.Scaling.value;\n\n\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t}\n\n\t\tif ( 'Translation' in textureNode ) {\n\n\t\t\tconst values = textureNode.Translation.value;\n\n\t\t\ttexture.offset.x = values[ 0 ];\n\t\t\ttexture.offset.y = values[ 1 ];\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\tloadTexture( textureNode, images ) {\n\n\t\tconst extension = textureNode.FileName.split( '.' ).pop().toLowerCase();\n\n\t\tlet loader = this.manager.getHandler( `.${extension}` );\n\t\tif ( loader === null ) loader = this.textureLoader;\n\n\t\tconst loaderPath = loader.path;\n\n\t\tif ( ! loaderPath ) {\n\n\t\t\tloader.setPath( this.textureLoader.path );\n\n\t\t}\n\n\t\tconst children = connections.get( textureNode.id ).children;\n\n\t\tlet fileName;\n\n\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\tloader.setPath( undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( fileName === undefined ) {\n\n\t\t\tconsole.warn( 'FBXLoader: Undefined filename, creating placeholder texture.' );\n\t\t\treturn new Texture();\n\n\t\t}\n\n\t\tconst texture = loader.load( fileName );\n\n\t\t// revert to initial path\n\t\tloader.setPath( loaderPath );\n\n\t\treturn texture;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Material\n\tparseMaterials( textureMap ) {\n\n\t\tconst materialMap = new Map();\n\n\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\tconst materialNodes = fbxTree.Objects.Material;\n\n\t\t\tfor ( const nodeID in materialNodes ) {\n\n\t\t\t\tconst material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materialMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Material\n\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t// FBX format currently only supports Lambert and Phong shading models\n\tparseMaterial( materialNode, textureMap ) {\n\n\t\tconst ID = materialNode.id;\n\t\tconst name = materialNode.attrName;\n\t\tlet type = materialNode.ShadingModel;\n\n\t\t// Case where FBX wraps shading model in property object.\n\t\tif ( typeof type === 'object' ) {\n\n\t\t\ttype = type.value;\n\n\t\t}\n\n\t\t// Ignore unused materials which don't have any connections.\n\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\tconst parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\tlet material;\n\n\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\tcase 'phong':\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\t\t\tcase 'lambert':\n\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tmaterial.setValues( parameters );\n\t\tmaterial.name = name;\n\n\t\treturn material;\n\n\t}\n\n\t// Parse FBX material and return parameters suitable for a three.js material\n\t// Also parse the texture map and return any textures associated with the material\n\tparseParameters( materialNode, textureMap, ID ) {\n\n\t\tconst parameters = {};\n\n\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Diffuse ) {\n\n\t\t\tparameters.color = ColorManagement.colorSpaceToWorking( new Color().fromArray( materialNode.Diffuse.value ), SRGBColorSpace );\n\n\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\tparameters.color = ColorManagement.colorSpaceToWorking( new Color().fromArray( materialNode.DiffuseColor.value ), SRGBColorSpace );\n\n\t\t}\n\n\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Emissive ) {\n\n\t\t\tparameters.emissive = ColorManagement.colorSpaceToWorking( new Color().fromArray( materialNode.Emissive.value ), SRGBColorSpace );\n\n\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\tparameters.emissive = ColorManagement.colorSpaceToWorking( new Color().fromArray( materialNode.EmissiveColor.value ), SRGBColorSpace );\n\n\t\t}\n\n\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t}\n\n\t\t// the transparency handling is implemented based on Blender/Unity's approach: https://github.com/sobotka/blender-addons/blob/7d80f2f97161fc8e353a657b179b9aa1f8e5280b/io_scene_fbx/import_fbx.py#L1444-L1459\n\n\t\tparameters.opacity = 1 - ( materialNode.TransparencyFactor ? parseFloat( materialNode.TransparencyFactor.value ) : 0 );\n\n\t\tif ( parameters.opacity === 1 || parameters.opacity === 0 ) {\n\n\t\t\tparameters.opacity = ( materialNode.Opacity ? parseFloat( materialNode.Opacity.value ) : null );\n\n\t\t\tif ( parameters.opacity === null ) {\n\n\t\t\t\tparameters.opacity = 1 - ( materialNode.TransparentColor ? parseFloat( materialNode.TransparentColor.value[ 0 ] ) : 0 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\tparameters.transparent = true;\n\n\t\t}\n\n\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Shininess ) {\n\n\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t}\n\n\t\tif ( materialNode.Specular ) {\n\n\t\t\tparameters.specular = ColorManagement.colorSpaceToWorking( new Color().fromArray( materialNode.Specular.value ), SRGBColorSpace );\n\n\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\tparameters.specular = ColorManagement.colorSpaceToWorking( new Color().fromArray( materialNode.SpecularColor.value ), SRGBColorSpace );\n\n\t\t}\n\n\t\tconst scope = this;\n\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\tconst type = child.relationship;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'Bump':\n\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DiffuseColor':\n\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.map !== undefined ) {\n\n\t\t\t\t\t\tparameters.map.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.emissiveMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.emissiveMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NormalMap':\n\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.envMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.specularMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.specularMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TransparentColor':\n\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientColor':\n\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn parameters;\n\n\t}\n\n\t// get a texture from the textureMap for use by a material.\n\tgetTexture( textureMap, id ) {\n\n\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t}\n\n\t\treturn textureMap.get( id );\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Deformer\n\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\tparseDeformers() {\n\n\t\tconst skeletons = {};\n\t\tconst morphTargets = {};\n\n\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\tconst DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\tfor ( const nodeID in DeformerNodes ) {\n\n\t\t\t\tconst deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\tconst skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\tconst morphTarget = {\n\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t};\n\n\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tskeletons: skeletons,\n\t\t\tmorphTargets: morphTargets,\n\n\t\t};\n\n\t}\n\n\t// Parse single nodes in FBXTree.Objects.Deformer\n\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t// Each skin node represents a skeleton and each cluster node represents a bone\n\tparseSkeleton( relationships, deformerNodes ) {\n\n\t\tconst rawBones = [];\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst boneNode = deformerNodes[ child.ID ];\n\n\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\tconst rawBone = {\n\n\t\t\t\tID: child.ID,\n\t\t\t\tindices: [],\n\t\t\t\tweights: [],\n\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t};\n\n\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t}\n\n\t\t\trawBones.push( rawBone );\n\n\t\t} );\n\n\t\treturn {\n\n\t\t\trawBones: rawBones,\n\t\t\tbones: []\n\n\t\t};\n\n\t}\n\n\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\tparseMorphTargets( relationships, deformerNodes ) {\n\n\t\tconst rawMorphTargets = [];\n\n\t\tfor ( let i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\tconst child = relationships.children[ i ];\n\n\t\t\tconst morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\tconst rawMorphTarget = {\n\n\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\tid: morphTargetNode.id,\n\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t};\n\n\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t} )[ 0 ].ID;\n\n\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t}\n\n\t\treturn rawMorphTargets;\n\n\t}\n\n\t// create the main Group() to be returned by the loader\n\tparseScene( deformers, geometryMap, materialMap ) {\n\n\t\tsceneGraph = new Group();\n\n\t\tconst modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tconst scope = this;\n\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\tconst modelNode = modelNodes[ model.ID ];\n\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\tconst parentConnections = connections.get( model.ID ).parents;\n\n\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\tconst parent = modelMap.get( connection.ID );\n\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t} );\n\n\t\t\tif ( model.parent === null ) {\n\n\t\t\t\tsceneGraph.add( model );\n\n\t\t\t}\n\n\n\t\t} );\n\n\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\tthis.addGlobalSceneSettings();\n\n\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\tif ( node.parent ) {\n\n\t\t\t\t\tnode.userData.transformData.parentMatrix = node.parent.matrix;\n\t\t\t\t\tnode.userData.transformData.parentMatrixWorld = node.parent.matrixWorld;\n\n\t\t\t\t}\n\n\t\t\t\tconst transform = generateTransform( node.userData.transformData );\n\n\t\t\t\tnode.applyMatrix4( transform );\n\t\t\t\tnode.updateWorldMatrix();\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst animations = new AnimationParser().parse();\n\n\t\t// if all the models where already combined in a single group, just return that\n\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t}\n\n\t\tsceneGraph.animations = animations;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.Model\n\tparseModels( skeletons, geometryMap, materialMap ) {\n\n\t\tconst modelMap = new Map();\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tfor ( const nodeID in modelNodes ) {\n\n\t\t\tconst id = parseInt( nodeID );\n\t\t\tconst node = modelNodes[ nodeID ];\n\t\t\tconst relationships = connections.get( id );\n\n\t\t\tlet model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\tif ( ! model ) {\n\n\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Null':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\t\t\t\tmodel.userData.originalName = node.attrName;\n\n\t\t\t\tmodel.ID = id;\n\n\t\t\t}\n\n\t\t\tthis.getTransformData( model, node );\n\t\t\tmodelMap.set( id, model );\n\n\t\t}\n\n\t\treturn modelMap;\n\n\t}\n\n\tbuildSkeleton( relationships, skeletons, id, name ) {\n\n\t\tlet bone = null;\n\n\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\tfor ( const ID in skeletons ) {\n\n\t\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\tconst subBone = bone;\n\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\tbone.userData.originalName = name;\n\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t// duplicate the bone here and add it as a child of the first bone\n\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn bone;\n\n\t}\n\n\t// create a PerspectiveCamera or OrthographicCamera\n\tcreateCamera( relationships ) {\n\n\t\tlet model;\n\t\tlet cameraAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tcameraAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type = 0;\n\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\ttype = 1;\n\n\t\t\t}\n\n\t\t\tlet nearClippingPlane = 1;\n\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t}\n\n\t\t\tlet farClippingPlane = 1000;\n\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t}\n\n\n\t\t\tlet width = window.innerWidth;\n\t\t\tlet height = window.innerHeight;\n\n\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t}\n\n\t\t\tconst aspect = width / height;\n\n\t\t\tlet fov = 45;\n\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t}\n\n\t\t\tconst focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Perspective\n\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Orthographic cameras not supported yet.' );\n\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\t// Create a DirectionalLight, PointLight or SpotLight\n\tcreateLight( relationships ) {\n\n\t\tlet model;\n\t\tlet lightAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tlightAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( lightAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type;\n\n\t\t\t// LightType can be undefined for Point lights\n\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\ttype = 0;\n\n\t\t\t} else {\n\n\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t}\n\n\t\t\tlet color = 0xffffff;\n\n\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\tcolor = ColorManagement.colorSpaceToWorking( new Color().fromArray( lightAttribute.Color.value ), SRGBColorSpace );\n\n\t\t\t}\n\n\t\t\tlet intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t// light disabled\n\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\tintensity = 0;\n\n\t\t\t}\n\n\t\t\tlet distance = 0;\n\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\tdistance = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\tconst decay = 1;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Point\n\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Directional\n\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // Spot\n\t\t\t\t\tlet angle = Math.PI / 3;\n\n\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet penumbra = 0;\n\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\tmodel.castShadow = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateMesh( relationships, geometryMap, materialMap ) {\n\n\t\tlet model;\n\t\tlet geometry = null;\n\t\tlet material = null;\n\t\tconst materials = [];\n\n\t\t// get geometry and materials(s) from connections\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t}\n\n\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( materials.length > 1 ) {\n\n\t\t\tmaterial = materials;\n\n\t\t} else if ( materials.length > 0 ) {\n\n\t\t\tmaterial = materials[ 0 ];\n\n\t\t} else {\n\n\t\t\tmaterial = new MeshPhongMaterial( {\n\t\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\t\tcolor: 0xcccccc\n\t\t\t} );\n\t\t\tmaterials.push( material );\n\n\t\t}\n\n\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t\t// Sanitization: If geometry has groups, then it must match the provided material array.\n\t\t// If not, we need to clean up the `group.materialIndex` properties inside the groups and point at a (new) default material.\n\t\t// This isn't well defined; Unity creates default material, while Blender implicitly uses the previous material in the list.\n\t\tif ( geometry.groups.length > 0 ) {\n\n\t\t\tlet needsDefaultMaterial = false;\n\n\t\t\tfor ( let i = 0, il = geometry.groups.length; i < il; i ++ ) {\n\n\t\t\t\tconst group = geometry.groups[ i ];\n\n\t\t\t\tif ( group.materialIndex < 0 || group.materialIndex >= materials.length ) {\n\n\t\t\t\t\tgroup.materialIndex = materials.length;\n\t\t\t\t\tneedsDefaultMaterial = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( needsDefaultMaterial ) {\n\n\t\t\t\tconst defaultMaterial = new MeshPhongMaterial();\n\t\t\t\tmaterials.push( defaultMaterial );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\tmodel.normalizeSkinWeights();\n\n\t\t} else {\n\n\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateCurve( relationships, geometryMap ) {\n\n\t\tconst geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\treturn geo;\n\n\t\t}, null );\n\n\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\tconst material = new LineBasicMaterial( {\n\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\tcolor: 0x3300ff,\n\t\t\tlinewidth: 1\n\t\t} );\n\t\treturn new Line( geometry, material );\n\n\t}\n\n\t// parse the model node for transform data\n\tgetTransformData( model, modelNode ) {\n\n\t\tconst transformData = {};\n\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\telse transformData.eulerOrder = getEulerOrder( 0 );\n\n\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\tmodel.userData.transformData = transformData;\n\n\t}\n\n\tsetLookAtProperties( model, modelNode ) {\n\n\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\tconst children = connections.get( model.ID ).children;\n\n\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\tconst lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\tconst pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tbindSkeleton( skeletons, geometryMap, modelMap ) {\n\n\t\tconst bindMatrices = this.parsePoseNodes();\n\n\t\tfor ( const ID in skeletons ) {\n\n\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\tconst parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\tconst geoID = parent.ID;\n\t\t\t\t\tconst geoRelationships = connections.get( geoID );\n\n\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\tconst model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tparsePoseNodes() {\n\n\t\tconst bindMatrices = {};\n\n\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\tconst BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\tfor ( const nodeID in BindPoseNode ) {\n\n\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' && BindPoseNode[ nodeID ].NbPoseNodes > 0 ) {\n\n\t\t\t\t\tconst poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bindMatrices;\n\n\t}\n\n\taddGlobalSceneSettings() {\n\n\t\tif ( 'GlobalSettings' in fbxTree ) {\n\n\t\t\tif ( 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\t// Parse ambient color - if it's not set to black (default), create an ambient light\n\n\t\t\t\tconst ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tconst r = ambientColor[ 0 ];\n\t\t\t\tconst g = ambientColor[ 1 ];\n\t\t\t\tconst b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tconst color = new Color().setRGB( r, g, b, SRGBColorSpace );\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( 'UnitScaleFactor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tsceneGraph.userData.unitScaleFactor = fbxTree.GlobalSettings.UnitScaleFactor.value;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse Geometry data from FBXTree and return map of BufferGeometries\nclass GeometryParser {\n\n\tconstructor() {\n\n\t\tthis.negativeMaterialIndices = false;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Geometry\n\tparse( deformers ) {\n\n\t\tconst geometryMap = new Map();\n\n\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\tconst geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\tfor ( const nodeID in geoNodes ) {\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\tconst geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// report warnings\n\n\t\tif ( this.negativeMaterialIndices === true ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected.' );\n\n\t\t}\n\n\t\treturn geometryMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Geometry\n\tparseGeometry( relationships, geoNode, deformers ) {\n\n\t\tswitch ( geoNode.attrType ) {\n\n\t\t\tcase 'Mesh':\n\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\tbreak;\n\n\t\t\tcase 'NurbsCurve':\n\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\tparseMeshGeometry( relationships, geoNode, deformers ) {\n\n\t\tconst skeletons = deformers.skeletons;\n\t\tconst morphTargets = [];\n\n\t\tconst modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t} );\n\n\t\t// don't create geometry if it is not associated with any models\n\t\tif ( modelNodes.length === 0 ) return;\n\n\t\tconst skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\treturn skeleton;\n\n\t\t}, null );\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// Assume one model and get the preRotation from that\n\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\tconst modelNode = modelNodes[ 0 ];\n\n\t\tconst transformData = {};\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\tconst transform = generateTransform( transformData );\n\n\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t}\n\n\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\tgenGeometry( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\tconst geo = new BufferGeometry();\n\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\tconst geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\tconst buffers = this.genBuffers( geoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t}\n\n\t\tif ( skeleton ) {\n\n\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t// used later to bind the skeleton to the model\n\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t}\n\n\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\tconst normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t}\n\n\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\tconst name = i === 0 ? 'uv' : `uv${ i }`;\n\n\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t} );\n\n\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\tlet prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\tlet startIndex = 0;\n\n\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\tconst lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\tconst lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t// using one of them\n\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\treturn geo;\n\n\t}\n\n\tparseGeoNode( geoNode, skeleton ) {\n\n\t\tconst geoInfo = {};\n\n\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\tif ( geoNode.LayerElementColor && geoNode.LayerElementColor[ 0 ].Colors ) {\n\n\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\tgeoInfo.uv = [];\n\n\t\t\tlet i = 0;\n\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeoInfo.weightTable = {};\n\n\t\tif ( skeleton !== null ) {\n\n\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn geoInfo;\n\n\t}\n\n\tgenBuffers( geoInfo ) {\n\n\t\tconst buffers = {\n\t\t\tvertex: [],\n\t\t\tnormal: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\t\t\tmaterialIndex: [],\n\t\t\tvertexWeights: [],\n\t\t\tweightsIndices: [],\n\t\t};\n\n\t\tlet polygonIndex = 0;\n\t\tlet faceLength = 0;\n\t\tlet displayedWeightsWarning = false;\n\n\t\t// these will hold data for a single face\n\t\tlet facePositionIndexes = [];\n\t\tlet faceNormals = [];\n\t\tlet faceColors = [];\n\t\tlet faceUVs = [];\n\t\tlet faceWeights = [];\n\t\tlet faceWeightIndices = [];\n\n\t\tconst scope = this;\n\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\tlet materialIndex;\n\t\t\tlet endOfFace = false;\n\n\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t// A cube with quad faces looks like this:\n\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t//  }\n\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\tendOfFace = true;\n\n\t\t\t}\n\n\t\t\tlet weightIndices = [];\n\t\t\tlet weights = [];\n\n\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t} );\n\n\n\t\t\t\t}\n\n\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\tconst Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\tlet currentWeight = weight;\n\t\t\t\t\t\tlet currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\tconst tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\tweights = Weight;\n\n\t\t\t\t}\n\n\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tmaterialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\tif ( materialIndex < 0 ) {\n\n\t\t\t\t\tscope.negativeMaterialIndices = true;\n\t\t\t\t\tmaterialIndex = 0; // fallback\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfaceLength ++;\n\n\t\t\tif ( endOfFace ) {\n\n\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\tpolygonIndex ++;\n\t\t\t\tfaceLength = 0;\n\n\t\t\t\t// reset arrays for the next face\n\t\t\t\tfacePositionIndexes = [];\n\t\t\t\tfaceNormals = [];\n\t\t\t\tfaceColors = [];\n\t\t\t\tfaceUVs = [];\n\t\t\t\tfaceWeights = [];\n\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn buffers;\n\n\t}\n\n\t// See https://www.khronos.org/opengl/wiki/Calculating_a_Surface_Normal\n\tgetNormalNewell( vertices ) {\n\n\t\tconst normal = new Vector3( 0.0, 0.0, 0.0 );\n\n\t\tfor ( let i = 0; i < vertices.length; i ++ ) {\n\n\t\t\tconst current = vertices[ i ];\n\t\t\tconst next = vertices[ ( i + 1 ) % vertices.length ];\n\n\t\t\tnormal.x += ( current.y - next.y ) * ( current.z + next.z );\n\t\t\tnormal.y += ( current.z - next.z ) * ( current.x + next.x );\n\t\t\tnormal.z += ( current.x - next.x ) * ( current.y + next.y );\n\n\t\t}\n\n\t\tnormal.normalize();\n\n\t\treturn normal;\n\n\t}\n\n\tgetNormalTangentAndBitangent( vertices ) {\n\n\t\tconst normalVector = this.getNormalNewell( vertices );\n\t\t// Avoid up being equal or almost equal to normalVector\n\t\tconst up = Math.abs( normalVector.z ) > 0.5 ? new Vector3( 0.0, 1.0, 0.0 ) : new Vector3( 0.0, 0.0, 1.0 );\n\t\tconst tangent = up.cross( normalVector ).normalize();\n\t\tconst bitangent = normalVector.clone().cross( tangent ).normalize();\n\n\t\treturn {\n\t\t\tnormal: normalVector,\n\t\t\ttangent: tangent,\n\t\t\tbitangent: bitangent\n\t\t};\n\n\t}\n\n\tflattenVertex( vertex, normalTangent, normalBitangent ) {\n\n\t\treturn new Vector2(\n\t\t\tvertex.dot( normalTangent ),\n\t\t\tvertex.dot( normalBitangent )\n\t\t);\n\n\t}\n\n\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\tgenFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\tlet triangles;\n\n\t\tif ( faceLength > 3 ) {\n\n\t\t\t// Triangulate n-gon using earcut\n\n\t\t\tconst vertices = [];\n\t\t\t// in morphing scenario vertexPositions represent morphPositions\n\t\t\t// while baseVertexPositions represent the original geometry's positions\n\t\t\tconst positions = geoInfo.baseVertexPositions || geoInfo.vertexPositions;\n\t\t\tfor ( let i = 0; i < facePositionIndexes.length; i += 3 ) {\n\n\t\t\t\tvertices.push(\n\t\t\t\t\tnew Vector3(\n\t\t\t\t\t\tpositions[ facePositionIndexes[ i ] ],\n\t\t\t\t\t\tpositions[ facePositionIndexes[ i + 1 ] ],\n\t\t\t\t\t\tpositions[ facePositionIndexes[ i + 2 ] ]\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tconst { tangent, bitangent } = this.getNormalTangentAndBitangent( vertices );\n\t\t\tconst triangulationInput = [];\n\n\t\t\tfor ( const vertex of vertices ) {\n\n\t\t\t\ttriangulationInput.push( this.flattenVertex( vertex, tangent, bitangent ) );\n\n\t\t\t}\n\n\t\t\t// When vertices is an array of [0,0,0] elements (which is the case for vertices not participating in morph)\n\t\t\t// the triangulationInput will be an array of [0,0] elements\n\t\t\t// resulting in an array of 0 triangles being returned from ShapeUtils.triangulateShape\n\t\t\t// leading to not pushing into buffers.vertex the redundant vertices (the vertices that are not morphed).\n\t\t\t// That's why, in order to support morphing scenario, \"positions\" is looking first for baseVertexPositions,\n\t\t\t// so that we don't end up with an array of 0 triangles for the faces not participating in morph.\n\t\t\ttriangles = ShapeUtils.triangulateShape( triangulationInput, [] );\n\n\t\t} else {\n\n\t\t\t// Regular triangle, skip earcut triangulation step\n\t\t\ttriangles = [[ 0, 1, 2 ]];\n\n\t\t}\n\n\t\tfor ( const [ i0, i1, i2 ] of triangles ) {\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 + 2 ] ] );\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 3 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i0 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i0 * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i1 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i1 * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i2 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i2 * 2 + 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\taddMorphTargets( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\tif ( morphTargets.length === 0 ) return;\n\n\t\tparentGeo.morphTargetsRelative = true;\n\n\t\tparentGeo.morphAttributes.position = [];\n\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\tconst scope = this;\n\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\tconst morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\tgenMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\tconst basePositions = parentGeoNode.Vertices !== undefined ? parentGeoNode.Vertices.a : [];\n\t\tconst baseIndices = parentGeoNode.PolygonVertexIndex !== undefined ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\tconst morphPositionsSparse = morphGeoNode.Vertices !== undefined ? morphGeoNode.Vertices.a : [];\n\t\tconst morphIndices = morphGeoNode.Indexes !== undefined ? morphGeoNode.Indexes.a : [];\n\n\t\tconst length = parentGeo.attributes.position.count * 3;\n\t\tconst morphPositions = new Float32Array( length );\n\n\t\tfor ( let i = 0; i < morphIndices.length; i ++ ) {\n\n\t\t\tconst morphIndex = morphIndices[ i ] * 3;\n\n\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t}\n\n\t\t// TODO: add morph normal support\n\t\tconst morphGeoInfo = {\n\t\t\tvertexIndices: baseIndices,\n\t\t\tvertexPositions: morphPositions,\n\t\t\tbaseVertexPositions: basePositions\n\t\t};\n\n\t\tconst morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t}\n\n\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\tparseNormals( NormalNode ) {\n\n\t\tconst mappingType = NormalNode.MappingInformationType;\n\t\tconst referenceType = NormalNode.ReferenceInformationType;\n\t\tconst buffer = NormalNode.Normals.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 3,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\tparseUVs( UVNode ) {\n\n\t\tconst mappingType = UVNode.MappingInformationType;\n\t\tconst referenceType = UVNode.ReferenceInformationType;\n\t\tconst buffer = UVNode.UV.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 2,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\tparseVertexColors( ColorNode ) {\n\n\t\tconst mappingType = ColorNode.MappingInformationType;\n\t\tconst referenceType = ColorNode.ReferenceInformationType;\n\t\tconst buffer = ColorNode.Colors.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t}\n\n\t\tfor ( let i = 0, c = new Color(); i < buffer.length; i += 4 ) {\n\n\t\t\tc.fromArray( buffer, i );\n\t\t\tColorManagement.colorSpaceToWorking( c, SRGBColorSpace );\n\t\t\tc.toArray( buffer, i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 4,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\tparseMaterialIndices( MaterialNode ) {\n\n\t\tconst mappingType = MaterialNode.MappingInformationType;\n\t\tconst referenceType = MaterialNode.ReferenceInformationType;\n\n\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: [ 0 ],\n\t\t\t\tindices: [ 0 ],\n\t\t\t\tmappingType: 'AllSame',\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t}\n\n\t\tconst materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t// for conforming with the other functions we've written for other data.\n\t\tconst materialIndices = [];\n\n\t\tfor ( let i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\tmaterialIndices.push( i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 1,\n\t\t\tbuffer: materialIndexBuffer,\n\t\t\tindices: materialIndices,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\tparseNurbsGeometry( geoNode ) {\n\n\t\tconst order = parseInt( geoNode.Order );\n\n\t\tif ( isNaN( order ) ) {\n\n\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst degree = order - 1;\n\n\t\tconst knots = geoNode.KnotVector.a;\n\t\tconst controlPoints = [];\n\t\tconst pointsValues = geoNode.Points.a;\n\n\t\tfor ( let i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t}\n\n\t\tlet startKnot, endKnot;\n\n\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\tstartKnot = degree;\n\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\tfor ( let i = 0; i < degree; ++ i ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\tconst points = curve.getPoints( controlPoints.length * 12 );\n\n\t\treturn new BufferGeometry().setFromPoints( points );\n\n\t}\n\n}\n\n// parse animation data from FBXTree\nclass AnimationParser {\n\n\t// take raw animation clips and turn them into three.js animation clips\n\tparse() {\n\n\t\tconst animationClips = [];\n\n\t\tconst rawClips = this.parseClips();\n\n\t\tif ( rawClips !== undefined ) {\n\n\t\t\tfor ( const key in rawClips ) {\n\n\t\t\t\tconst rawClip = rawClips[ key ];\n\n\t\t\t\tconst clip = this.addClip( rawClip );\n\n\t\t\t\tanimationClips.push( clip );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animationClips;\n\n\t}\n\n\tparseClips() {\n\n\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t// if this is undefined we can safely assume there are no animations\n\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\tconst curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\tconst layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\tconst rawClips = this.parseAnimStacks( layersMap );\n\n\t\treturn rawClips;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t// and is referenced by an AnimationLayer\n\tparseAnimationCurveNodes() {\n\n\t\tconst rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\tconst curveNodesMap = new Map();\n\n\t\tfor ( const nodeID in rawCurveNodes ) {\n\n\t\t\tconst rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\tconst curveNode = {\n\n\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\tcurves: {},\n\n\t\t\t\t};\n\n\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn curveNodesMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t// axis ( e.g. times and values of x rotation)\n\tparseAnimationCurves( curveNodesMap ) {\n\n\t\tconst rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t// clearly, this should be optimised to\n\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\tfor ( const nodeID in rawCurves ) {\n\n\t\t\tconst animationCurve = {\n\n\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t};\n\n\t\t\tconst relationships = connections.get( animationCurve.id );\n\n\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\tconst animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\tconst animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\tparseAnimationLayers( curveNodesMap ) {\n\n\t\tconst rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\tconst layersMap = new Map();\n\n\t\tfor ( const nodeID in rawLayers ) {\n\n\t\t\tconst layerCurveNodes = [];\n\n\t\t\tconst connection = connections.get( parseInt( nodeID ) );\n\n\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\tconst children = connection.children;\n\n\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\tconst curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\tconst geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\tconst modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn layersMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t// hierarchy. Each Stack node will be used to create an AnimationClip\n\tparseAnimStacks( layersMap ) {\n\n\t\tconst rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t// connect the stacks (clips) up to the layers\n\t\tconst rawClips = {};\n\n\t\tfor ( const nodeID in rawStacks ) {\n\n\t\t\tconst children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t}\n\n\t\t\tconst layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\tlayer: layer,\n\n\t\t\t};\n\n\t\t}\n\n\t\treturn rawClips;\n\n\t}\n\n\taddClip( rawClip ) {\n\n\t\tlet tracks = [];\n\n\t\tconst scope = this;\n\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t} );\n\n\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t}\n\n\tgenerateTracks( rawTracks ) {\n\n\t\tconst tracks = [];\n\n\t\tlet initialPosition = new Vector3();\n\t\tlet initialScale = new Vector3();\n\n\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, new Quaternion(), initialScale );\n\n\t\tinitialPosition = initialPosition.toArray();\n\t\tinitialScale = initialScale.toArray();\n\n\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\tconst positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\tconst rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\tconst scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\tconst morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\tgenerateVectorTrack( modelName, curves, initialValue, type ) {\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t}\n\n\tgenerateRotationTrack( modelName, curves, preRotation, postRotation, eulerOrder ) {\n\n\t\tlet times;\n\t\tlet values;\n\n\t\tif ( curves.x !== undefined && curves.y !== undefined && curves.z !== undefined ) {\n\n\t\t\tconst result = this.interpolateRotations( curves.x, curves.y, curves.z, eulerOrder );\n\n\t\t\ttimes = result[ 0 ];\n\t\t\tvalues = result[ 1 ];\n\n\t\t}\n\n\t\t// For Maya models using \"Joint Orient\", Euler order only applies to rotation, not pre/post-rotations\n\t\tconst defaultEulerOrder = getEulerOrder( 0 );\n\n\t\tif ( preRotation !== undefined ) {\n\n\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\tpreRotation.push( defaultEulerOrder );\n\n\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t}\n\n\t\tif ( postRotation !== undefined ) {\n\n\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\tpostRotation.push( defaultEulerOrder );\n\n\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\n\n\t\t}\n\n\t\tconst quaternion = new Quaternion();\n\t\tconst euler = new Euler();\n\n\t\tconst quaternionValues = [];\n\n\t\tif ( ! values || ! times ) return new QuaternionKeyframeTrack( modelName + '.quaternion', [ 0 ], [ 0 ] );\n\n\t\tfor ( let i = 0; i < values.length; i += 3 ) {\n\n\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t// Check unroll\n\t\t\tif ( i > 2 ) {\n\n\t\t\t\tconst prevQuat = new Quaternion().fromArray(\n\t\t\t\t\tquaternionValues,\n\t\t\t\t\t( ( i - 3 ) / 3 ) * 4\n\t\t\t\t);\n\n\t\t\t\tif ( prevQuat.dot( quaternion ) < 0 ) {\n\n\t\t\t\t\tquaternion.set( - quaternion.x, - quaternion.y, - quaternion.z, - quaternion.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t}\n\n\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t}\n\n\tgenerateMorphTrack( rawTracks ) {\n\n\t\tconst curves = rawTracks.DeformPercent.curves.morph;\n\t\tconst values = curves.values.map( function ( val ) {\n\n\t\t\treturn val / 100;\n\n\t\t} );\n\n\t\tconst morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t}\n\n\t// For all animated objects, times are defined separately for each axis\n\t// Here we'll combine the times into one sorted array without duplicates\n\tgetTimesForAllAxes( curves ) {\n\n\t\tlet times = [];\n\n\t\t// first join together the times for each axis, if defined\n\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t// then sort them\n\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t} );\n\n\t\t// and remove duplicates\n\t\tif ( times.length > 1 ) {\n\n\t\t\tlet targetIndex = 1;\n\t\t\tlet lastValue = times[ 0 ];\n\t\t\tfor ( let i = 1; i < times.length; i ++ ) {\n\n\t\t\t\tconst currentValue = times[ i ];\n\t\t\t\tif ( currentValue !== lastValue ) {\n\n\t\t\t\t\ttimes[ targetIndex ] = currentValue;\n\t\t\t\t\tlastValue = currentValue;\n\t\t\t\t\ttargetIndex ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttimes = times.slice( 0, targetIndex );\n\n\t\t}\n\n\t\treturn times;\n\n\t}\n\n\tgetKeyframeTrackValues( times, curves, initialValue ) {\n\n\t\tconst prevValue = initialValue;\n\n\t\tconst values = [];\n\n\t\tlet xIndex = - 1;\n\t\tlet yIndex = - 1;\n\t\tlet zIndex = - 1;\n\n\t\ttimes.forEach( function ( time ) {\n\n\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t// if there is an x value defined for this frame, use that\n\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\tconst xValue = curves.x.values[ xIndex ];\n\t\t\t\tvalues.push( xValue );\n\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\tconst yValue = curves.y.values[ yIndex ];\n\t\t\t\tvalues.push( yValue );\n\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t}\n\n\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\tconst zValue = curves.z.values[ zIndex ];\n\t\t\t\tvalues.push( zValue );\n\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn values;\n\n\t}\n\n\t// Rotations are defined as Euler angles which can have values  of any size\n\t// These will be converted to quaternions which don't support values greater than\n\t// PI, so we'll interpolate large rotations\n\tinterpolateRotations( curvex, curvey, curvez, eulerOrder ) {\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\t// Add first frame\n\t\ttimes.push( curvex.times[ 0 ] );\n\t\tvalues.push( MathUtils.degToRad( curvex.values[ 0 ] ) );\n\t\tvalues.push( MathUtils.degToRad( curvey.values[ 0 ] ) );\n\t\tvalues.push( MathUtils.degToRad( curvez.values[ 0 ] ) );\n\n\t\tfor ( let i = 1; i < curvex.values.length; i ++ ) {\n\n\t\t\tconst initialValue = [\n\t\t\t\tcurvex.values[ i - 1 ],\n\t\t\t\tcurvey.values[ i - 1 ],\n\t\t\t\tcurvez.values[ i - 1 ],\n\t\t\t];\n\n\t\t\tif ( isNaN( initialValue[ 0 ] ) || isNaN( initialValue[ 1 ] ) || isNaN( initialValue[ 2 ] ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst initialValueRad = initialValue.map( MathUtils.degToRad );\n\n\t\t\tconst currentValue = [\n\t\t\t\tcurvex.values[ i ],\n\t\t\t\tcurvey.values[ i ],\n\t\t\t\tcurvez.values[ i ],\n\t\t\t];\n\n\t\t\tif ( isNaN( currentValue[ 0 ] ) || isNaN( currentValue[ 1 ] ) || isNaN( currentValue[ 2 ] ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValueRad = currentValue.map( MathUtils.degToRad );\n\n\t\t\tconst valuesSpan = [\n\t\t\t\tcurrentValue[ 0 ] - initialValue[ 0 ],\n\t\t\t\tcurrentValue[ 1 ] - initialValue[ 1 ],\n\t\t\t\tcurrentValue[ 2 ] - initialValue[ 2 ],\n\t\t\t];\n\n\t\t\tconst absoluteSpan = [\n\t\t\t\tMath.abs( valuesSpan[ 0 ] ),\n\t\t\t\tMath.abs( valuesSpan[ 1 ] ),\n\t\t\t\tMath.abs( valuesSpan[ 2 ] ),\n\t\t\t];\n\n\t\t\tif ( absoluteSpan[ 0 ] >= 180 || absoluteSpan[ 1 ] >= 180 || absoluteSpan[ 2 ] >= 180 ) {\n\n\t\t\t\tconst maxAbsSpan = Math.max( ...absoluteSpan );\n\n\t\t\t\tconst numSubIntervals = maxAbsSpan / 180;\n\n\t\t\t\tconst E1 = new Euler( ...initialValueRad, eulerOrder );\n\t\t\t\tconst E2 = new Euler( ...currentValueRad, eulerOrder );\n\n\t\t\t\tconst Q1 = new Quaternion().setFromEuler( E1 );\n\t\t\t\tconst Q2 = new Quaternion().setFromEuler( E2 );\n\n\t\t\t\t// Check unroll\n\t\t\t\tif ( Q1.dot( Q2 ) ) {\n\n\t\t\t\t\tQ2.set( - Q2.x, - Q2.y, - Q2.z, - Q2.w );\n\n\t\t\t\t}\n\n\t\t\t\t// Interpolate\n\t\t\t\tconst initialTime = curvex.times[ i - 1 ];\n\t\t\t\tconst timeSpan = curvex.times[ i ] - initialTime;\n\n\t\t\t\tconst Q = new Quaternion();\n\t\t\t\tconst E = new Euler();\n\t\t\t\tfor ( let t = 0; t < 1; t += 1 / numSubIntervals ) {\n\n\t\t\t\t\tQ.copy( Q1.clone().slerp( Q2.clone(), t ) );\n\n\t\t\t\t\ttimes.push( initialTime + t * timeSpan );\n\t\t\t\t\tE.setFromQuaternion( Q, eulerOrder );\n\n\t\t\t\t\tvalues.push( E.x );\n\t\t\t\t\tvalues.push( E.y );\n\t\t\t\t\tvalues.push( E.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttimes.push( curvex.times[ i ] );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvex.values[ i ] ) );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvey.values[ i ] ) );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvez.values[ i ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn [ times, values ];\n\n\t}\n\n}\n\n// parse an FBX file in ASCII format\nclass TextParser {\n\n\tgetPrevNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t}\n\n\tgetCurrentNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t}\n\n\tgetCurrentProp() {\n\n\t\treturn this.currentProp;\n\n\t}\n\n\tpushStack( node ) {\n\n\t\tthis.nodeStack.push( node );\n\t\tthis.currentIndent += 1;\n\n\t}\n\n\tpopStack() {\n\n\t\tthis.nodeStack.pop();\n\t\tthis.currentIndent -= 1;\n\n\t}\n\n\tsetCurrentProp( val, name ) {\n\n\t\tthis.currentProp = val;\n\t\tthis.currentPropName = name;\n\n\t}\n\n\tparse( text ) {\n\n\t\tthis.currentIndent = 0;\n\n\t\tthis.allNodes = new FBXTree();\n\t\tthis.nodeStack = [];\n\t\tthis.currentProp = [];\n\t\tthis.currentPropName = '';\n\n\t\tconst scope = this;\n\n\t\tconst split = text.split( /[\\r\\n]+/ );\n\n\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\tconst matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\tconst matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\tconst matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\tconst matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\tconst matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\tif ( matchBeginning ) {\n\n\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\tscope.popStack();\n\n\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.allNodes;\n\n\t}\n\n\tparseNodeBegin( line, property ) {\n\n\t\tconst nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\tconst nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t} );\n\n\t\tconst node = { name: nodeName };\n\t\tconst attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\t// a top node\n\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t} else { // a subnode\n\n\t\t\t// if the subnode already exists, append it\n\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\tthis.pushStack( node );\n\n\t}\n\n\tparseNodeAttr( attrs ) {\n\n\t\tlet id = attrs[ 0 ];\n\n\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet name = '', type = '';\n\n\t\tif ( attrs.length > 1 ) {\n\n\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\ttype = attrs[ 2 ];\n\n\t\t}\n\n\t\treturn { id: id, name: name, type: type };\n\n\t}\n\n\tparseNodeProperty( line, property, contentLine ) {\n\n\t\tlet propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\tlet propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t//\tContent: ,\n\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t}\n\n\t\tconst currentNode = this.getCurrentNode();\n\t\tconst parentName = currentNode.name;\n\n\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Connections\n\t\tif ( propName === 'C' ) {\n\n\t\t\tconst connProps = propValue.split( ',' ).slice( 1 );\n\t\t\tconst from = parseInt( connProps[ 0 ] );\n\t\t\tconst to = parseInt( connProps[ 1 ] );\n\n\t\t\tlet rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t} );\n\n\t\t\tpropName = 'connections';\n\t\t\tpropValue = [ from, to ];\n\t\t\tappend( propValue, rest );\n\n\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Node\n\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t// connections\n\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t} else {\n\n\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\telse currentNode.a = propValue;\n\n\t\t}\n\n\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t}\n\n\t}\n\n\tparseNodePropertyContinued( line ) {\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\tcurrentNode.a += line;\n\n\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t// so convert the string to an array\n\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t}\n\n\t}\n\n\t// parse \"Property70\"\n\tparseNodeSpecialProperty( line, propName, propValue ) {\n\n\t\t// split this\n\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t// into array like below\n\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\tconst props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t} );\n\n\t\tconst innerPropName = props[ 0 ];\n\t\tconst innerPropType1 = props[ 1 ];\n\t\tconst innerPropType2 = props[ 2 ];\n\t\tconst innerPropFlag = props[ 3 ];\n\t\tlet innerPropValue = props[ 4 ];\n\n\t\t// cast values where needed, otherwise leave as strings\n\t\tswitch ( innerPropType1 ) {\n\n\t\t\tcase 'int':\n\t\t\tcase 'enum':\n\t\t\tcase 'bool':\n\t\t\tcase 'ULongLong':\n\t\t\tcase 'double':\n\t\t\tcase 'Number':\n\t\t\tcase 'FieldOfView':\n\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t\tcase 'Color':\n\t\t\tcase 'ColorRGB':\n\t\t\tcase 'Vector3D':\n\t\t\tcase 'Lcl_Translation':\n\t\t\tcase 'Lcl_Rotation':\n\t\t\tcase 'Lcl_Scaling':\n\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// CAUTION: these props must append to parent's parent\n\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t'type': innerPropType1,\n\t\t\t'type2': innerPropType2,\n\t\t\t'flag': innerPropFlag,\n\t\t\t'value': innerPropValue\n\n\t\t};\n\n\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t}\n\n}\n\n// Parse an FBX file in Binary format\nclass BinaryParser {\n\n\tparse( buffer ) {\n\n\t\tconst reader = new BinaryReader( buffer );\n\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\tconst version = reader.getUint32();\n\n\t\tif ( version < 6400 ) {\n\n\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t}\n\n\t\tconst allNodes = new FBXTree();\n\n\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\tconst node = this.parseNode( reader, version );\n\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t}\n\n\t\treturn allNodes;\n\n\t}\n\n\t// Check if reader has reached the end of content.\n\tendOfContent( reader ) {\n\n\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t// - 16bytes: magic\n\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t// - 4bytes: magic\n\t\t// - 4bytes: version\n\t\t// - 120bytes: zero\n\t\t// - 16bytes: magic\n\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t} else {\n\n\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t}\n\n\t}\n\n\t// recursively parse nodes until the end of the file is reached\n\tparseNode( reader, version ) {\n\n\t\tconst node = {};\n\n\t\t// The first three data sizes depends on version.\n\t\tconst endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\tconst numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\tconst nameLen = reader.getUint8();\n\t\tconst name = reader.getString( nameLen );\n\n\t\t// Regards this node as NULL-record if endOffset is zero\n\t\tif ( endOffset === 0 ) return null;\n\n\t\tconst propertyList = [];\n\n\t\tfor ( let i = 0; i < numProperties; i ++ ) {\n\n\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t}\n\n\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\tconst id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\tconst attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\tconst attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t// check if this node represents just a single property\n\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\tconst subNode = this.parseNode( reader, version );\n\n\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t}\n\n\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\tif ( typeof id === 'number' ) node.id = id;\n\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\tif ( name !== '' ) node.name = name;\n\n\t\treturn node;\n\n\t}\n\n\tparseSubNode( name, node, subNode ) {\n\n\t\t// special case: child node is single property\n\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\tconst value = subNode.propertyList[ 0 ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\tsubNode.a = value;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t}\n\n\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\tconst array = [];\n\n\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t} );\n\n\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\tnode.connections = [];\n\n\t\t\t}\n\n\t\t\tnode.connections.push( array );\n\n\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\tconst keys = Object.keys( subNode );\n\n\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t} );\n\n\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\tlet innerPropName = subNode.propertyList[ 0 ];\n\t\t\tlet innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\tconst innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\tconst innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\tlet innerPropValue;\n\n\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\tinnerPropValue = [\n\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t}\n\n\t\t\t// this will be copied to parent, see above\n\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t}\n\n\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tparseProperty( reader ) {\n\n\t\tconst type = reader.getString( 1 );\n\t\tlet length;\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 'C':\n\t\t\t\treturn reader.getBoolean();\n\n\t\t\tcase 'D':\n\t\t\t\treturn reader.getFloat64();\n\n\t\t\tcase 'F':\n\t\t\t\treturn reader.getFloat32();\n\n\t\t\tcase 'I':\n\t\t\t\treturn reader.getInt32();\n\n\t\t\tcase 'L':\n\t\t\t\treturn reader.getInt64();\n\n\t\t\tcase 'R':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\tcase 'S':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getString( length );\n\n\t\t\tcase 'Y':\n\t\t\t\treturn reader.getInt16();\n\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'f':\n\t\t\tcase 'i':\n\t\t\tcase 'l':\n\n\t\t\t\tconst arrayLength = reader.getUint32();\n\t\t\t\tconst encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\tconst compressedLength = reader.getUint32();\n\n\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst data = fflate.unzlibSync( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) );\n\t\t\t\tconst reader2 = new BinaryReader( data.buffer );\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\tcase 'i':\n\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t}\n\n\t\t\t\tbreak; // cannot happen but is required by the DeepScan\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t}\n\n\t}\n\n}\n\nclass BinaryReader {\n\n\tconstructor( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\t\tthis._textDecoder = new TextDecoder();\n\n\t}\n\n\tgetOffset() {\n\n\t\treturn this.offset;\n\n\t}\n\n\tsize() {\n\n\t\treturn this.dv.buffer.byteLength;\n\n\t}\n\n\tskip( length ) {\n\n\t\tthis.offset += length;\n\n\t}\n\n\t// seems like true/false representation depends on exporter.\n\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t// then sees LSB.\n\tgetBoolean() {\n\n\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t}\n\n\tgetBooleanArray( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getBoolean() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint8() {\n\n\t\tconst value = this.dv.getUint8( this.offset );\n\t\tthis.offset += 1;\n\t\treturn value;\n\n\t}\n\n\tgetInt16() {\n\n\t\tconst value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\tthis.offset += 2;\n\t\treturn value;\n\n\t}\n\n\tgetInt32() {\n\n\t\tconst value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetInt32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint32() {\n\n\t\tconst value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t// There's a possibility that this method returns wrong value if the value\n\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t// TODO: safely handle 64-bit integer\n\tgetInt64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\t// calculate negative value\n\t\tif ( high & 0x80000000 ) {\n\n\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetInt64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// Note: see getInt64() comment\n\tgetUint64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetFloat32() {\n\n\t\tconst value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetFloat32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetFloat64() {\n\n\t\tconst value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\tthis.offset += 8;\n\t\treturn value;\n\n\t}\n\n\tgetFloat64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetArrayBuffer( size ) {\n\n\t\tconst value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\tthis.offset += size;\n\t\treturn value;\n\n\t}\n\n\tgetString( size ) {\n\n\t\tconst start = this.offset;\n\t\tlet a = new Uint8Array( this.dv.buffer, start, size );\n\n\t\tthis.skip( size );\n\n\t\tconst nullByte = a.indexOf( 0 );\n\t\tif ( nullByte >= 0 ) a = new Uint8Array( this.dv.buffer, start, nullByte );\n\n\t\treturn this._textDecoder.decode( a );\n\n\t}\n\n}\n\n// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n// and BinaryParser( FBX Binary format)\nclass FBXTree {\n\n\tadd( key, val ) {\n\n\t\tthis[ key ] = val;\n\n\t}\n\n}\n\n// ************** UTILITY FUNCTIONS **************\n\nfunction isFbxFormatBinary( buffer ) {\n\n\tconst CORRECT = 'Kaydara\\u0020FBX\\u0020Binary\\u0020\\u0020\\0';\n\n\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n}\n\nfunction isFbxFormatASCII( text ) {\n\n\tconst CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\tlet cursor = 0;\n\n\tfunction read( offset ) {\n\n\t\tconst result = text[ offset - 1 ];\n\t\ttext = text.slice( cursor + offset );\n\t\tcursor ++;\n\t\treturn result;\n\n\t}\n\n\tfor ( let i = 0; i < CORRECT.length; ++ i ) {\n\n\t\tconst num = read( 1 );\n\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nfunction getFbxVersion( text ) {\n\n\tconst versionRegExp = /FBXVersion: (\\d+)/;\n\tconst match = text.match( versionRegExp );\n\n\tif ( match ) {\n\n\t\tconst version = parseInt( match[ 1 ] );\n\t\treturn version;\n\n\t}\n\n\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n}\n\n// Converts FBX ticks into real time seconds.\nfunction convertFBXTimeToSeconds( time ) {\n\n\treturn time / 46186158000;\n\n}\n\nconst dataArray = [];\n\n// extracts the data from the correct position in the FBX array based on indexing type\nfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\tlet index;\n\n\tswitch ( infoObject.mappingType ) {\n\n\t\tcase 'ByPolygonVertex' :\n\t\t\tindex = polygonVertexIndex;\n\t\t\tbreak;\n\t\tcase 'ByPolygon' :\n\t\t\tindex = polygonIndex;\n\t\t\tbreak;\n\t\tcase 'ByVertice' :\n\t\t\tindex = vertexIndex;\n\t\t\tbreak;\n\t\tcase 'AllSame' :\n\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\tbreak;\n\t\tdefault :\n\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t}\n\n\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\tconst from = index * infoObject.dataSize;\n\tconst to = from + infoObject.dataSize;\n\n\treturn slice( dataArray, infoObject.buffer, from, to );\n\n}\n\nconst tempEuler = new Euler();\nconst tempVec = new Vector3();\n\n// generate transformation from FBX transform data\n// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\nfunction generateTransform( transformData ) {\n\n\tconst lTranslationM = new Matrix4();\n\tconst lPreRotationM = new Matrix4();\n\tconst lRotationM = new Matrix4();\n\tconst lPostRotationM = new Matrix4();\n\n\tconst lScalingM = new Matrix4();\n\tconst lScalingPivotM = new Matrix4();\n\tconst lScalingOffsetM = new Matrix4();\n\tconst lRotationOffsetM = new Matrix4();\n\tconst lRotationPivotM = new Matrix4();\n\n\tconst lParentGX = new Matrix4();\n\tconst lParentLX = new Matrix4();\n\tconst lGlobalT = new Matrix4();\n\n\tconst inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\t// For Maya models using \"Joint Orient\", Euler order only applies to rotation, not pre/post-rotations\n\tconst defaultEulerOrder = getEulerOrder( 0 );\n\n\tif ( transformData.preRotation ) {\n\n\t\tconst array = transformData.preRotation.map( MathUtils.degToRad );\n\t\tarray.push( defaultEulerOrder );\n\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.rotation ) {\n\n\t\tconst array = transformData.rotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || defaultEulerOrder );\n\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.postRotation ) {\n\n\t\tconst array = transformData.postRotation.map( MathUtils.degToRad );\n\t\tarray.push( defaultEulerOrder );\n\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\t\tlPostRotationM.invert();\n\n\t}\n\n\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t// Pivots and offsets\n\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t// parent transform\n\tif ( transformData.parentMatrixWorld ) {\n\n\t\tlParentLX.copy( transformData.parentMatrix );\n\t\tlParentGX.copy( transformData.parentMatrixWorld );\n\n\t}\n\n\tconst lLRM = lPreRotationM.clone().multiply( lRotationM ).multiply( lPostRotationM );\n\t// Global Rotation\n\tconst lParentGRM = new Matrix4();\n\tlParentGRM.extractRotation( lParentGX );\n\n\t// Global Shear*Scaling\n\tconst lParentTM = new Matrix4();\n\tlParentTM.copyPosition( lParentGX );\n\n\tconst lParentGRSM = lParentTM.clone().invert().multiply( lParentGX );\n\tconst lParentGSM = lParentGRM.clone().invert().multiply( lParentGRSM );\n\tconst lLSM = lScalingM;\n\n\tconst lGlobalRS = new Matrix4();\n\n\tif ( inheritType === 0 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t} else if ( inheritType === 1 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t} else {\n\n\t\tconst lParentLSM = new Matrix4().scale( new Vector3().setFromMatrixScale( lParentLX ) );\n\t\tconst lParentLSM_inv = lParentLSM.clone().invert();\n\t\tconst lParentGSM_noLocal = lParentGSM.clone().multiply( lParentLSM_inv );\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t}\n\n\tconst lRotationPivotM_inv = lRotationPivotM.clone().invert();\n\tconst lScalingPivotM_inv = lScalingPivotM.clone().invert();\n\t// Calculate the local transform matrix\n\tlet lTransform = lTranslationM.clone().multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\tconst lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\tconst lGlobalTranslation = lParentGX.clone().multiply( lLocalTWithAllPivotAndOffsetInfo );\n\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\tlTransform = lGlobalT.clone().multiply( lGlobalRS );\n\n\t// from global to local\n\tlTransform.premultiply( lParentGX.invert() );\n\n\treturn lTransform;\n\n}\n\n// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\nfunction getEulerOrder( order ) {\n\n\torder = order || 0;\n\n\tconst enums = [\n\t\t'ZYX', // -> XYZ extrinsic\n\t\t'YZX', // -> XZY extrinsic\n\t\t'XZY', // -> YZX extrinsic\n\t\t'ZXY', // -> YXZ extrinsic\n\t\t'YXZ', // -> ZXY extrinsic\n\t\t'XYZ', // -> ZYX extrinsic\n\t\t//'SphericXYZ', // not possible to support\n\t];\n\n\tif ( order === 6 ) {\n\n\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\treturn enums[ 0 ];\n\n\t}\n\n\treturn enums[ order ];\n\n}\n\n// Parses comma separated list of numbers and returns them an array.\n// Used internally by the TextParser\nfunction parseNumberArray( value ) {\n\n\tconst array = value.split( ',' ).map( function ( val ) {\n\n\t\treturn parseFloat( val );\n\n\t} );\n\n\treturn array;\n\n}\n\nfunction convertArrayBufferToString( buffer, from, to ) {\n\n\tif ( from === undefined ) from = 0;\n\tif ( to === undefined ) to = buffer.byteLength;\n\n\treturn new TextDecoder().decode( new Uint8Array( buffer, from, to ) );\n\n}\n\nfunction append( a, b ) {\n\n\tfor ( let i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n}\n\nfunction slice( a, b, from, to ) {\n\n\tfor ( let i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n\treturn a;\n\n}\n\n\nexport { FBXLoader };\n"],"names":["u8","u16","i32","fleb","fdeb","clim","freb","eb","start","b","i","j","_a","fl","revfl","_b","fd","rev","x","hMap","cd","mb","r","s","l","le","co","rvb","sv","r_1","v","m","flt","fdt","flrm","fdrm","max","a","bits","d","p","o","bits16","shft","slc","e","ec","err","ind","msg","nt","inflt","dat","st","buf","dict","sl","dl","noBuf","resize","noSt","cbuf","bl","nbuf","final","pos","bt","lm","dm","lbt","dbt","tbts","type","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","c","n","lt","dt","t","lms","dms","lpos","sym","add","dsym","end","shift","dend","et","zls","unzlibSync","data","opts","td","tds","findSpan","u","U","low","high","mid","calcBasisFunctions","span","N","left","right","saved","rv","lv","temp","calcBSplinePoint","P","C","Vector4","point","Nj","wNj","calcBasisFunctionDerivatives","zeroArr","ders","ndu","s1","s2","k","rk","pk","j1","j2","calcBSplineDerivatives","nd","du","CK","nders","Pw","w","calcKoverI","nom","denom","calcRationalCurveDerivatives","Pders","Aders","wders","Vector3","calcNURBSDerivatives","NURBSCurve","Curve","degree","knots","controlPoints","startKnot","endKnot","knotsLength","pointsLength","optionalTarget","hpoint","NURBSUtils.calcBSplinePoint","tangent","NURBSUtils.calcNURBSDerivatives","json","fbxTree","connections","sceneGraph","FBXLoader","Loader","manager","url","onLoad","onProgress","onError","scope","path","LoaderUtils","loader","FileLoader","buffer","FBXBuffer","isFbxFormatBinary","BinaryParser","FBXText","convertArrayBufferToString","isFbxFormatASCII","getFbxVersion","TextParser","textureLoader","TextureLoader","FBXTreeParser","images","textures","materials","deformers","geometryMap","GeometryParser","connectionMap","rawConnection","fromID","toID","relationship","parentRelationship","childRelationship","blobs","videoNodes","nodeID","videoNode","id","arrayBufferContent","base64Content","image","filename","content","fileName","extension","array","textureMap","textureNodes","texture","textureNode","wrapModeU","wrapModeV","valueU","valueV","RepeatWrapping","ClampToEdgeWrapping","values","loaderPath","children","Texture","materialMap","materialNodes","material","materialNode","ID","name","parameters","MeshPhongMaterial","MeshLambertMaterial","ColorManagement","Color","SRGBColorSpace","child","EquirectangularReflectionMapping","skeletons","morphTargets","DeformerNodes","deformerNode","relationships","skeleton","morphTarget","deformerNodes","rawBones","boneNode","rawBone","Matrix4","rawMorphTargets","morphTargetNode","rawMorphTarget","Group","modelMap","modelNodes","model","modelNode","connection","parent","node","transform","generateTransform","animations","AnimationParser","Bone","PropertyBinding","bone","subBone","cameraAttribute","attr","Object3D","nearClippingPlane","farClippingPlane","width","height","aspect","fov","focalLength","PerspectiveCamera","lightAttribute","color","intensity","distance","decay","PointLight","DirectionalLight","angle","MathUtils","penumbra","SpotLight","geometry","needsDefaultMaterial","il","group","defaultMaterial","SkinnedMesh","Mesh","geo","LineBasicMaterial","Line","transformData","getEulerOrder","lookAtTarget","bindMatrices","geoID","geoConnParent","Skeleton","BindPoseNode","poseNodes","poseNode","ambientColor","g","AmbientLight","geoNodes","geoNode","preTransform","BufferGeometry","geoInfo","buffers","positionAttribute","Float32BufferAttribute","Uint16BufferAttribute","normalMatrix","Matrix3","normalAttribute","uvBuffer","prevMaterialIndex","startIndex","currentIndex","lastGroup","lastIndex","index","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","materialIndex","endOfFace","weightIndices","weights","getData","wt","wIndex","Weight","weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","uv","vertices","normal","current","next","normalVector","bitangent","vertex","normalTangent","normalBitangent","Vector2","triangles","positions","triangulationInput","ShapeUtils","i0","i1","i2","parentGeo","parentGeoNode","rawTarget","morphGeoNode","basePositions","baseIndices","morphPositionsSparse","morphIndices","length","morphPositions","morphIndex","morphGeoInfo","morphBuffers","NormalNode","mappingType","referenceType","indexBuffer","UVNode","ColorNode","MaterialNode","materialIndexBuffer","materialIndices","order","pointsValues","points","animationClips","rawClips","key","rawClip","clip","curveNodesMap","layersMap","rawCurveNodes","rawCurveNode","curveNode","rawCurves","animationCurve","convertFBXTimeToSeconds","animationCurveID","animationCurveRelationship","rawLayers","layerCurveNodes","modelID","rawModel","deformerID","morpherID","rawStacks","layer","tracks","rawTracks","AnimationClip","initialPosition","initialScale","Quaternion","positionTrack","rotationTrack","scaleTrack","morphTrack","modelName","curves","initialValue","times","VectorKeyframeTrack","preRotation","postRotation","eulerOrder","result","defaultEulerOrder","Euler","quaternion","euler","quaternionValues","QuaternionKeyframeTrack","val","morphNum","NumberKeyframeTrack","targetIndex","lastValue","currentValue","prevValue","xIndex","yIndex","zIndex","time","xValue","yValue","zValue","curvex","curvey","curvez","initialValueRad","currentValueRad","valuesSpan","absoluteSpan","numSubIntervals","E1","E2","Q1","Q2","initialTime","timeSpan","Q","E","text","FBXTree","split","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","property","nodeName","nodeAttrs","attrs","currentNode","contentLine","propName","propValue","connProps","from","to","rest","elem","append","parseNumberArray","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","reader","BinaryReader","version","allNodes","endOffset","numProperties","nameLen","propertyList","attrName","attrType","subNode","value","arrayLength","encoding","compressedLength","fflate.unzlibSync","reader2","littleEndian","size","nullByte","CORRECT","cursor","read","offset","versionRegExp","match","dataArray","infoObject","slice","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lParentLX","lGlobalT","inheritType","lLRM","lParentGRM","lParentTM","lParentGRSM","lParentGSM","lLSM","lGlobalRS","lParentLSM_inv","lParentGSM_noLocal","lRotationPivotM_inv","lScalingPivotM_inv","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}